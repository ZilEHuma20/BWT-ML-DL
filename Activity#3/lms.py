# -*- coding: utf-8 -*-
"""LMS.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cHGpfH8Xa6_0yt70tWf6ESVKpQDh09Y8
"""

class Book:
    def __init__(self, title, author, pages):
        self._title = title
        self._author = author
        self._pages = pages

    @property
    def title(self):
        return self._title

    @title.setter
    def title(self, value):
        self._title = value

    @property
    def author(self):
        return self._author

    @author.setter
    def author(self, value):
        self._author = value

    @property
    def pages(self):
        return self._pages

    @pages.setter
    def pages(self, value):
        self._pages = value

    @classmethod
    def calculate_reading_time(cls, pages, reading_speed=250):
        # assume 250 words per minute
        return pages / reading_speed * 60  # convert to minutes

    def __str__(self):
        return f"Title: {self.title}, Author: {self.author}, Pages: {self.pages}"


class Ebook(Book):
    def __init__(self, title, author, pages, format):
        super().__init__(title, author, pages)
        self._format = format

    @property
    def format(self):
        return self._format

    @format.setter
    def format(self, value):
        self._format = value

    def __str__(self):
        return f"Title: {self.title}, Author: {self.author}, Pages: {self.pages}, Format: {self.format}"


# Create an instance of Book
book = Book("To Kill a Mockingbird", "Harper Lee", 281)
print(book)  # Title: To Kill a Mockingbird, Author: Harper Lee, Pages: 281

# Demonstrate getter and setter methods
print(book.title)  # To Kill a Mockingbird
book.title = "The Great Gatsby"
print(book.title)  # The Great Gatsby

# Calculate reading time
print(f"Reading time: {Book.calculate_reading_time(book.pages)} minutes")

# Create an instance of Ebook
ebook = Ebook("1984", "George Orwell", 328, "EPUB")
print(ebook)  # Title: 1984, Author: George Orwell, Pages: 328, Format: EPUB